name: Deploy Portfolio

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout del repository
      - uses: actions/checkout@v4

      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Cache intelligente per npm
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-v20
          restore-keys: |
            npm-cache-${{ runner.os }}-node-

      - name: Install dependencies (CI)
        run: npm ci --prefer-offline --no-audit --progress=false

      - name: Debug node modules (optional)
        run: |
          echo "Node/npm versions:"
          node -v && npm -v
          echo "Lista node_modules/.bin:"
          ls -la node_modules/.bin || true

      - name: Fix node_modules/.bin permissions
        run: |
          if [ -d node_modules/.bin ]; then
            chmod -R u+rx node_modules/.bin || true
          fi

      - name: Build project
        run: |
          # Preferisci lo script npm; se fallisce, prova il fallback diretto a vite via node
          if npm run build; then
            echo "Build eseguita con successo"
          else
            echo "npm run build fallito — tentativo fallback con node node_modules/vite/bin/vite.js"
            node node_modules/vite/bin/vite.js build
          fi

      - name: Verify build output
        run: |
          echo "Verifica esistenza dist..."
          if [ ! -d dist ]; then
            echo "::error::Directory 'dist' non trovata. La build non ha prodotto output."
            echo "Lista file repo (ultimo stato):"
            ls -la
            echo "Contenuto della cartella di build (se esiste):"
            ls -la dist || true
            exit 1
          fi
          echo "Contenuto dist:"
          ls -la dist

      # Upload artifact per GitHub Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Check GitHub Pages enabled
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Controllo se GitHub Pages è abilitato..."
          resp=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/pages" || true)
          if echo "$resp" | grep -q \"Not Found\"; then
            echo "::error::GitHub Pages non abilitato per questo repository. Abilitalo in: https://github.com/${{ github.repository }}/settings/pages"
            echo "Risposta API:"
            echo "$resp"
            exit 1
          fi
          echo "GitHub Pages sembra abilitato."

      - id: deployment
        uses: actions/deploy-pages@v3
